<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started | SEDRo</title><link>https://anur0n.github.io/docs/</link><atom:link href="https://anur0n.github.io/docs/index.xml" rel="self" type="application/rss+xml"/><description>Getting Started</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 09 Nov 2020 00:00:00 +0000</lastBuildDate><image><url>https://anur0n.github.io/images/logo_hu6ea3e39d9e54ace09942537133240714_469934_300x300_fit_lanczos_3.png</url><title>Getting Started</title><link>https://anur0n.github.io/docs/</link></image><item><title>Thing to-do in SEDRo</title><link>https://anur0n.github.io/docs/todo_list/</link><pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate><guid>https://anur0n.github.io/docs/todo_list/</guid><description>&lt;p>The following are planned todo list:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Vision system correction.&lt;/p>
&lt;ul>
&lt;li>Need to adjust upper and lower angles[-1,0) should be scaled to [-25,0), and upperangles [0, 1] should be scaled to [0, 30] degrees&lt;/li>
&lt;li>Cap Minimum focusing distance to 15.4mm&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Add graviti/acceleration sensor observation&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DM_control has some control options, like interacting with the viewer, like play/pause/restart/zoom. Add in SEDRo?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DM_Control provides observation in a dictionary. Process and provide our observations in this way. Like key-value pairs for visual, touch, vocal observations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Find the baby&amp;rsquo;s size ratio and scale according to real baby.&lt;/p>
&lt;ul>
&lt;li>Find size between birth and 1 year and make an average.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Implement joint attention for Mother: When baby looks at something for some period of time, mother will also look at the object and describe&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Change list</title><link>https://anur0n.github.io/docs/changelist/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://anur0n.github.io/docs/changelist/</guid><description>&lt;p>This page is under development.&lt;/p>
&lt;p>For now, change list can be seen in &lt;a href="https://docs.google.com/document/d/1ip4vXyHgv-3X8xdk59KZgjOal-VwRTOXyFOkksoC3Bc/edit?usp=sharing" target="_blank" rel="noopener">this doc&lt;/a>.
You can find the current Action Vector and Observation Vector info under &lt;strong>Versioning of I/O vectors&lt;/strong> section.&lt;/p></description></item><item><title>Configuring environment from python</title><link>https://anur0n.github.io/docs/config_env/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://anur0n.github.io/docs/config_env/</guid><description>&lt;p>SEDRo provides several options to configure the environment and the agent properties.&lt;/p>
&lt;h3 id="environment-configuration">Environment Configuration&lt;/h3>
&lt;p>When running the environment, you can configure which experiments/scenes to load. Also, date and time (i.e. age of the agent) can be set.&lt;/p>
&lt;p>First install sedro python package using:&lt;/p>
&lt;pre>&lt;code>pip install sedro
&lt;/code>&lt;/pre>
&lt;p>import sedro package and other classes&lt;/p>
&lt;pre>&lt;code class="language-python">import sedro
from sedro import SEDRo
from sedro.ConfigParams import *
from sedro import ConfigChannel
&lt;/code>&lt;/pre>
&lt;p>To configure the properties, create a dictionary and put the values. The keys should be according to the following code:&lt;/p>
&lt;pre>&lt;code class="language-python">
env_config = {
ConfigParams.ConfigMessageParamas.scene_to_load.value: float(ConfigParams.Experiments.Main.value),
ConfigParams.ConfigMessageParamas.game_day.value: 30,
#Time is should be a value in hhmm format, where hh is hour in 24 hour format and mm is minute
ConfigParams.ConfigMessageParamas.game_time_of_day.value: 355
}
config = {
&amp;quot;env_config&amp;quot;:env_config
}
&lt;/code>&lt;/pre>
&lt;p>Create the environment using these configurations:&lt;/p>
&lt;pre>&lt;code class="language-python">SEDRo.SEDRo(config_dictionary = config)
&lt;/code>&lt;/pre>
&lt;p>That&amp;rsquo;s it. This will configure the environment.&lt;/p>
&lt;h3 id="agent-configuration">Agent Configuration&lt;/h3>
&lt;p>Similar to the environment, you can configure the agent properties. To configure the properties, create a dictionary and put the values. The keys should be according to the following code:&lt;/p>
&lt;pre>&lt;code class="language-python">body_config = {
&amp;quot;chest_x&amp;quot;: 12,
&amp;quot;chest_y&amp;quot;: 12,
&amp;quot;chest_z&amp;quot;: 12,
&amp;quot;spine_x&amp;quot;: 12,
&amp;quot;spine_y&amp;quot;: 0,
&amp;quot;spine_z&amp;quot;: 0,
&amp;quot;head_x&amp;quot;: 5,
&amp;quot;head_y&amp;quot;: 5,
&amp;quot;head_z&amp;quot;: 5,
&amp;quot;thigh_x&amp;quot;: 0,
&amp;quot;thigh_y&amp;quot;: 0,
&amp;quot;thigh_z&amp;quot;: 0,
&amp;quot;shin_x&amp;quot;: 12,
&amp;quot;shin_y&amp;quot;: 0,
&amp;quot;shin_z&amp;quot;: 0,
&amp;quot;foot_x&amp;quot;: 6,
&amp;quot;foot_y&amp;quot;: 6,
&amp;quot;foot_z&amp;quot;: 6,
&amp;quot;upperArm_x&amp;quot;: 2,
&amp;quot;upperArm_y&amp;quot;: 1,
&amp;quot;upperArm_z&amp;quot;: 0,
&amp;quot;lowerArm_x&amp;quot;: 1,
&amp;quot;lowerArm_y&amp;quot;: 0,
&amp;quot;lowerArm_z&amp;quot;: 0,
&amp;quot;hand_x&amp;quot;: 1,
&amp;quot;hand_y&amp;quot;: 1,
&amp;quot;hand_z&amp;quot;: 0,
&amp;quot;finger_upper_x&amp;quot;: 0.25,
&amp;quot;finger_upper_y&amp;quot;: 0,
&amp;quot;finger_upper_z&amp;quot;: 0.25,
&amp;quot;finger_lower_x&amp;quot;: 0.25,
&amp;quot;finger_lower_y&amp;quot;: 0,
&amp;quot;finger_lower_z&amp;quot;: 0,
}
config = {
&amp;quot;body_config&amp;quot;:body_config
}
SEDRo.SEDRo(config_dictionary = config)
&lt;/code>&lt;/pre>
&lt;p>Following these instructions you should be able to see output like this:&lt;/p>
&lt;p>
&lt;figure >
&lt;a data-fancybox="" href="../docs/figures/env.png" >
&lt;img src="../docs/figures/env.png" alt="" >
&lt;/a>
&lt;/figure>
To learn more about creating the environment and connecting with it see &lt;a href="../docs/how_to_use">How to use&lt;/a> section.&lt;/p></description></item><item><title>SEDRo environment Scenes</title><link>https://anur0n.github.io/docs/scene_flow/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://anur0n.github.io/docs/scene_flow/</guid><description>&lt;p>Detail about the scenarios can be found &lt;a href="https://docs.google.com/document/d/1ulaqwIVzOX38n8uNuX8G229KzJW7hR1UCOjb1CAKTg0/edit?usp=sharing" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>Also check the interactive flow of scenarios below:&lt;/p>
&lt;div style="width: 960px; height: 720px; margin: 10px; position: relative;">&lt;iframe allowfullscreen frameborder="0" style="width:960px; height:720px" src="https://lucid.app/documents/embeddedchart/22539adc-686c-4d90-9720-01e7c8a27dbd" id="iS73qM0GuPbr">&lt;/iframe>&lt;/div></description></item><item><title>How to use</title><link>https://anur0n.github.io/docs/how_to_use/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anur0n.github.io/docs/how_to_use/</guid><description>&lt;p>To use SEDRo you can use the environment directly from unity or use the environment built into the python package.&lt;/p>
&lt;h3 id="using-environment-directly">Using environment directly&lt;/h3>
&lt;p>For this you need to download the environment from github. The details about this is given under &lt;a href="../docs/">Getting started&lt;/a> . The follow &lt;a href="#controlling-from-python">Controlling from python&lt;/a>&lt;/p>
&lt;h3 id="using-environment-from-python-package">Using environment from python package&lt;/h3>
&lt;p>You don&amp;rsquo;t need to do anything for this. Just install sedro package using pip.&lt;/p>
&lt;h3 id="controlling-from-python">Controlling from python&lt;/h3>
&lt;p>First install sedro python package using:&lt;/p>
&lt;pre>&lt;code>pip install --index-url https://test.pypi.org/simple/ --no-deps sedro
&lt;/code>&lt;/pre>
&lt;p>Now that our environment and the module is ready, import sedro package and other classes&lt;/p>
&lt;pre>&lt;code class="language-python">import sedro
from sedro import SEDRo
from sedro.ConfigParams import *
from sedro import ConfigChannel
&lt;/code>&lt;/pre>
&lt;p>Now before starting the environment you can configure the parameters of the environment and the agent. For that see &lt;a href="../docs/config_env">Configuring environment from python&lt;/a>. To use default configurations, don&amp;rsquo;t pass any configurations values&lt;/p>
&lt;pre>&lt;code class="language-python">import numpy as np
sedro_env = SEDRo.SEDRo()
print(sedro_env.agent_name)
&lt;/code>&lt;/pre>
&lt;p>Now you are ready to receive observations and send actions to the environment.&lt;/p>
&lt;pre>&lt;code class="language-python">decision_steps = sedro_env.env.get_steps(sedro_env.agent_name)[0]
for i in range(100):
action = np.random.randn(len(decision_steps), sedro_env.action_space)
decision_steps, terminal_steps = sedro_env.step(action)
if i%20 ==0:
print('Step: ', i)
pass
print(&amp;quot;Done&amp;quot;)
sedro_env.close()
&lt;/code>&lt;/pre>
&lt;p>Following these instructions you should be able to see output like this:&lt;/p>
&lt;figure >
&lt;a data-fancybox="" href="../docs/figures/env_gif.gif" >
&lt;img src="../docs/figures/env_gif.gif" alt="" >
&lt;/a>
&lt;/figure>
&lt;p>The code above performs 100 steps of simulation of the agent.&lt;/p>
&lt;p>From Unity documentation:&lt;/p>
&lt;p>&lt;strong>DecisionSteps&lt;/strong> — contains the data from Agents belonging to the same &amp;ldquo;Behavior&amp;rdquo; in the simulation, such as observations and rewards. Only Agents that requested a decision since the last call to env.step() are in the DecisionSteps object.&lt;/p>
&lt;p>&lt;strong>TerminalSteps&lt;/strong> — contains the data from Agents belonging to the same &amp;ldquo;Behavior&amp;rdquo; in the simulation, such as observations and rewards. Only Agents whose episode ended since the last call to env.step() are in the TerminalSteps object.&lt;/p></description></item></channel></rss>